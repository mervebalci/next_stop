// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  username      String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  isAdmin       Boolean   @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


// Item model that stores all things - restaurants, hotels, things to do.
// type attribute determines which kind of item it is, such as restaurant, hotel or thing-to-do.
model Item {
  id           Int @id @default(autoincrement())
  name         String
  description  String
  type         String
  rating       Int
  reviews      Review[]
}


// To allow people adding reviews
model Review {
  id          Int    @id @default(autoincrement())
  description String
  rating      Int
  itemId      Int
  item        Item   @relation(fields: [itemId], references: [id])
}


//                       !!!!!!!!!!!!!
// ALWAYS RUN 'npx prisma migrate dev' ANY TIME YOU MODIFY SCHEMA
//            TO APPLY THE CHANGES TO THE DATABASE
//                       !!!!!!!!!!!!!